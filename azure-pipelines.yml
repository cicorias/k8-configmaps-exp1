trigger:
  - main

resources:
  repositories:
    - repository: self

variables:
  dockerRegistryServiceConnection: 'shdcrbdppe1eus2cr'
  tag: '$(Build.BuildId)'
  configMap: my-config
  vmImageName: ubuntu-20.04


stages:
  # - stage: CI
  #   pool:
  #     vmImage: $(vmImageName)
  #   jobs:
  - stage: CD
    displayName: CD

    pool:
      vmImage: $(vmImageName)

    jobs:
    - job: CI
      steps:
      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            env | sort
            pwd
            ls -alt
      - publish:  $(System.DefaultWorkingDirectory)
        artifact: allfiles

    - deployment: Deploy
      dependsOn: Ci
      displayName: Deploy
      environment: 'scicoriabd.development'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: Bash@3
                inputs:
                  targetType: inline
                  script: |
                    env | sort
                    pwd
                    ls -alt $(Pipeline.Workspace)
              - task: Kubernetes@1
                displayName: 'Create ConfigMap'
                inputs:
                  connectionType: Kubernetes Service Connection
                  kubernetesServiceEndpoint: scicoriabd-scicoriabd-development-1627985149772
                  namespace: development
                  forceUpdateConfigMap: true
                  configMapName: $(configMap)
                  configMapArguments: >
                    --from-file=$(Build.SourcesDirectory)/game.properties
                  #  --from-literal=azure.application-insights.instrumentation-key=$(yq e '.azure.application-insights.instrumentation-key' $(Pipeline.Workspace)/app.yml)
                  #  --from-file=application.yml=$(Pipeline.Workspace)/app.yml


              - task: KubernetesManifest@0
                displayName: Deploy to Kubernetes cluster
                inputs:
                  action: deploy
                  manifests: $(Build.SourcesDirectory)/deployment.yaml

